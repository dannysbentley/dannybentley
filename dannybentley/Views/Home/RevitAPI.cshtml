
@{
    ViewBag.Title = "RevitAPI";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @Styles.Render("~/Content/StyleSheetPages.css");
}

<body>
    <!--Revit Expand-->
    <div class="container text-center">
        <h3>Revit API - Expand Revit's Capability</h3>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-4">
            <img src="~/Content/images/css3.png" id="icon" />
        </div>
        <div class="col-sm-6 text-left">
            <p>
                Revit's API allows us to build tools to automate many tasks in Revit.  The Revit API can be obtained and used with C#, Python or Dynamo.  The different develpment tools have different abilities.  Using Dynamo is great for visual programming that can be a quick development and deployment.  Python and C# are higher level development languages which can import libraries that can connect additional functionality to the addins.
                A good road map to learning these tools is to start by learning Revit, then learn Dynamo's visual programming, next learn to use Python with Dynamo and finally dive right in C#.
            </p>
        </div>
    </div>
    <br />

    <!--Interoperability-->
    <div class="container text-center">
        <h3>Digital model - Interoperability</h3>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-4">
            <img src="~/Content/images/css3.png" id="icon" />
        </div>
        <div class="col-sm-6 text-left">
            <p>
                We can extract element data, geometry and point location to send between software.  The API is a great tool when trying to link information between Revit and another design software.  This can be a frustrating task to do because Revit doesn't like to play nicely with other software.  The API allows us to manipulate and pass information between software.
            </p>
        </div>
    </div>

    <!--tools-->
    <div class="container text-center">
        <h3>Tools - Development and Execute</h3>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-4">
            <img src="~/Content/images/css3.png" id="icon" />
        </div>
        <div class="col-sm-6 text-left">
            <p>
                Current tools under construction range from small add-ins to more ambitious projects.  The tools start as project specific tools that later are imporoved to be used more broadly. The projects below can be downloaded, compile and edited and used as you may wish.  They are all under the MIT agreement.
            </p>

        </div>
    </div>
    <div class="container text-center">
        <h4>Viewport Automatic Updater</h4>
    </div>
    <div class="row">
        <div class="col-sm-4">
            <img src="~/Content/images/css3.png" id="icon" />
        </div>
        <div class="col-sm-6 text-left">
            <p>
                Viewport Automatic Updater is a tool which will trigger an action to label the viewport name to match the sheet, detail number and title when placed on a sheet.  The title will be copied to title on sheet to allow someone to have multiple details named the same.  If the viewport number, title name or sheet number is changed the trigger will automatically update the view name. Having this on automated tigger gives the user less to do and will maintain a standard naming convention.  This will setup a long term method to seach archived projects either on a hard drive or in a cloud library.
            </p>
        </div>
    </div>
</body>

