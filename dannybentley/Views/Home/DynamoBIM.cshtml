
@{
    ViewBag.Title = "DynamoBIM";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @Styles.Render("~/Content/StyleSheetPages.css");
}
<body>
    <!--Revit Expand-->
    <div class="container text-center">
        <h3>Dynamo - Quickly Build Automation</h3>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-4">
            <img src="~/Content/images/css3.png" id="icon" />
        </div>
        <div class="col-sm-6 text-left">
            <p>
                Dynamo has become an important part of the AEC everyday work flow.  Large and complex projects have too many items to attempt to generate or manipulate manualy.  This is why Dynamo has become so popular. Someone can develop quickly and implement imidiatly.

                Developing a Dynamo flow can help a developer protoype their idea which can be further developed in as a addin using C#. Dynamo can help test the concept and ensure it can work.  

                The community has become large with many user groups.  The form online is also a great place to get help.  
            </p>
        </div>
    </div>
    <br />

    <!--Interoperability-->
    <div class="container text-center">
        <h3>Dynamic - Import, Update and Create Data</h3>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-4">
            <img src="~/Content/images/css3.png" id="icon" />
        </div>
        <div class="col-sm-6 text-left">
            <p>
                We can extract element data, geometry and point location to send between software.  The API is a great tool when trying to link information between Revit and another software.

                Currently a Dynamo flow will collect all the model elements and export them to a csv file.  The csv file can be use to build a No SQL data base which has a one to many relationship the element id being the one and all its properties being the many.  

                Dynamo also help build geometry from different software such a Etabs and Rhino.  The point geometry and item properties can be mapped from the software to Revit using Dynamo.  

                Dynamo is such a flexable enviorment that during a demonstration I proved it linking Amazon Alexa to the Revit model.  The tool was a prototype but proved the ability to build a complex tool that implmented many parts.
            </p>
        </div>
    </div>

    <!--Development-->
    <div class="container text-center">
        <h3>Python - Library Collection</h3>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-4">
            <img src="~/Content/images/css3.png" id="icon" />
        </div>
        <div class="col-sm-6 text-left">
            <p>
                Python is a great language.  Using this language with Dynamo has many advantages.  It compacts the flow.  Using it instead of relying on importated package is great.  This ensures that anyone else can use it.  

                When developing a new tool its easy to reuse old code and edit it to fit the needs of the new tool.  I have collected a series of simple well commented code that can be copied as a starting point then edited to a more advance feature.  Building a libaray of Python actions which you use in Dynamo is strongly recommended.  I have my collection stored on my git hub and is available for anyone who might want it as a good starting point for their own libary.  
            </p>
        </div>
    </div>
</body>

